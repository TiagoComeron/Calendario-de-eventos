{"ast":null,"code":"import _defineProperty from \"C:/Users/tiago/Documents/Tokenlab/vue2/calendar/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/tiago/Documents/Tokenlab/vue2/calendar/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nvar breakpoints = ['sm', 'md', 'lg', 'xl'];\n\nvar breakpointProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n}();\n\nvar offsetProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n}();\n\nvar orderProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n}();\n\nvar propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  var className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    var breakpoint = prop.replace(type, '');\n    className += \"-\".concat(breakpoint);\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += \"-\".concat(val);\n  return className.toLowerCase();\n}\n\nvar cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    }\n  }, breakpointProps), {}, {\n    offset: {\n      type: [String, Number],\n      default: null\n    }\n  }, offsetProps), {}, {\n    order: {\n      type: [String, Number],\n      default: null\n    }\n  }, orderProps), {}, {\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: function validator(str) {\n        return ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str);\n      }\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  }),\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children,\n        parent = _ref.parent;\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    var cacheKey = '';\n\n    for (var prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    var classList = cache.get(cacheKey);\n\n    if (!classList) {\n      (function () {\n        var _classList$push;\n\n        classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n        var type;\n\n        for (type in propMap) {\n          propMap[type].forEach(function (prop) {\n            var value = props[prop];\n            var className = breakpointClass(type, prop, value);\n            if (className) classList.push(className);\n          });\n        }\n\n        var hasColClasses = classList.some(function (className) {\n          return className.startsWith('col-');\n        });\n        classList.push((_classList$push = {\n          // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n          col: !hasColClasses || !props.cols\n        }, _defineProperty(_classList$push, \"col-\".concat(props.cols), props.cols), _defineProperty(_classList$push, \"offset-\".concat(props.offset), props.offset), _defineProperty(_classList$push, \"order-\".concat(props.order), props.order), _defineProperty(_classList$push, \"align-self-\".concat(props.alignSelf), props.alignSelf), _classList$push));\n        cache.set(cacheKey, classList);\n      })();\n    }\n\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n});","map":{"version":3,"mappings":"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","names":["Vue","mergeData","upperFirst","breakpoints","breakpointProps","reduce","props","val","type","Boolean","String","Number","default","offsetProps","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","cols","alignSelf","validator","includes","str","tag","render","h","data","children","parent","cacheKey","classList","get","forEach","value","push","hasColClasses","some","startsWith","set","class"],"sourceRoot":"","sources":["../../../src/components/VGrid/VCol.ts"],"sourcesContent":["import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}