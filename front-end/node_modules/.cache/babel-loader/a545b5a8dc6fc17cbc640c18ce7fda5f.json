{"ast":null,"code":"import _slicedToArray from \"C:/Users/tiago/Documents/GitHub/Calendario-de-eventos/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Register',\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      birth_date: null,\n      activePicker: null,\n      menu: false,\n      date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      dateFormatted: this.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10))\n    };\n  },\n  props: {\n    rulesUsername: {\n      type: Array\n    },\n    rulesPassword: {\n      type: Array\n    },\n    dialog: {\n      type: Boolean\n    }\n  },\n  watch: {\n    menu: function menu(val) {\n      var _this = this;\n\n      val && setTimeout(function () {\n        return _this.activePicker = 'YEAR';\n      });\n    },\n    date: function date(val) {\n      this.dateFormatted = this.formatDate(this.date);\n    }\n  },\n  computed: {\n    computedDateFormatted: function computedDateFormatted() {\n      return this.formatDate(this.date);\n    }\n  },\n  methods: {\n    login: function login() {\n      var _this2 = this;\n\n      if (!this.$refs.formRegister.validate()) return;\n      var body = {\n        username: this.username,\n        password: this.password,\n        first_name: this.first_name,\n        last_name: this.last_name,\n        birth_date: this.birth_date\n      };\n      this.$root.$children[0].post(\"/calendar/register\", body, '', true, 'Usuário criado com sucesso', 'success').then(function (res) {\n        _this2.$emit(\"closeDialog\", false);\n      });\n      this.username = '', this.password = '', this.first_name = '', this.last_name = '', this.birth_date = null;\n    },\n    save: function save(date) {\n      this.$refs.menu.save(birth_date);\n    },\n    formatDate: function formatDate(date) {\n      if (!date) return null;\n\n      var _date$split = date.split('-'),\n          _date$split2 = _slicedToArray(_date$split, 3),\n          year = _date$split2[0],\n          month = _date$split2[1],\n          day = _date$split2[2];\n\n      return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n    },\n    parseDate: function parseDate(date) {\n      if (!date) return null;\n\n      var _date$split3 = date.split('/'),\n          _date$split4 = _slicedToArray(_date$split3, 3),\n          month = _date$split4[0],\n          day = _date$split4[1],\n          year = _date$split4[2];\n\n      return \"\".concat(year, \"-\").concat(month.padStart(2, '0'), \"-\").concat(day.padStart(2, '0'));\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;EACAA,gBADA;EAGAC,IAHA,kBAGA;IACA;MACAC,YADA;MAEAC,YAFA;MAGAC,cAHA;MAIAC,aAJA;MAKAC,gBALA;MAMAC,kBANA;MAOAC,WAPA;MAQAC,+FARA;MASAC;IATA;EAWA,CAfA;EAgBAC;IACAC;MAAAC;IAAA,CADA;IAEAC;MAAAD;IAAA,CAFA;IAGAE;MAAAF;IAAA;EAHA,CAhBA;EAqBAG;IACAR,IADA,gBACAS,GADA,EACA;MAAA;;MACAA;QAAA;MAAA;IACA,CAHA;IAIAR,IAJA,gBAIAQ,GAJA,EAIA;MACA;IACA;EANA,CArBA;EA6BAC;IACAC,qBADA,mCACA;MACA;IACA;EAHA,CA7BA;EAkCAC;IACAC,KADA,mBACA;MAAA;;MACA;MAEA;QACAnB,uBADA;QAEAC,uBAFA;QAGAC,2BAHA;QAIAC,yBAJA;QAKAC;MALA;MAQA;QACA;MACA,CAFA;MAIA,oBACA,kBADA,EAEA,oBAFA,EAGA,mBAHA,EAIA,sBAJA;IAKA,CArBA;IAsBAgB,IAtBA,gBAsBAb,IAtBA,EAsBA;MACA;IACA,CAxBA;IAyBAc,UAzBA,sBAyBAd,IAzBA,EAyBA;MACA;;MAEA;MAAA;MAAA;MAAA;MAAA;;MACA;IACA,CA9BA;IA+BAe,SA/BA,qBA+BAf,IA/BA,EA+BA;MACA;;MAEA;MAAA;MAAA;MAAA;MAAA;;MACA;IACA;EApCA;AAlCA","names":["name","data","username","password","first_name","last_name","birth_date","activePicker","menu","date","dateFormatted","props","rulesUsername","type","rulesPassword","dialog","watch","val","computed","computedDateFormatted","methods","login","save","formatDate","parseDate"],"sourceRoot":"src/components/shared","sources":["Register.vue"],"sourcesContent":["<template>\r\n  <v-form ref=\"formRegister\" @submit.prevent=\"login\" lazy-validation>\r\n    <v-container>\r\n        <v-row>\r\n            <v-col class=\"mr-5\">\r\n                <v-row>\r\n                    <v-text-field\r\n                    v-model=\"username\"\r\n                    label=\"Usuário\"\r\n                    :rules=\"this.rulesUsername\"\r\n                    ></v-text-field>\r\n                </v-row>\r\n                <v-row>\r\n                    <v-text-field v-model=\"password\" :rules=\"this.rulesPassword\" label=\"Senha\"></v-text-field>\r\n                </v-row>\r\n            </v-col>\r\n            <v-col>\r\n                <v-row>\r\n                    <v-text-field v-model=\"first_name\" :rules=\"this.rulesUsername\" label=\"Primeiro nome\"></v-text-field>\r\n                </v-row>\r\n                <v-row>\r\n                    <v-text-field v-model=\"last_name\" :rules=\"this.rulesUsername\" label=\"Ultimo nome\"></v-text-field>\r\n                </v-row>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <v-row>\r\n        <v-col>\r\n            <v-menu\r\n            ref=\"menu\"\r\n            v-model=\"menu\"\r\n            :close-on-content-click=\"false\"\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            min-width=\"auto\"\r\n            >\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-text-field\r\n                v-model=\"dateFormatted\"\r\n                @blur=\"date = parseDate(dateFormatted)\"\r\n                label=\"Data de nascimento\"\r\n                prepend-icon=\"mdi-calendar\"\r\n                readonly\r\n                v-bind=\"attrs\"\r\n                v-on=\"on\"\r\n                ></v-text-field>\r\n            </template>\r\n            <v-date-picker\r\n                v-model=\"birth_date\"\r\n                locale=\"pt-BR\"\r\n                :active-picker.sync=\"activePicker\"\r\n                :max=\"(new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\"\r\n                min=\"1950-01-01\"\r\n                @change=\"save\"\r\n            ></v-date-picker>\r\n            </v-menu>\r\n        </v-col>\r\n            <span>{{this.birth_date}}\r\n                </span>\r\n        </v-row>\r\n        <v-row>\r\n        <v-col>\r\n            <v-btn\r\n                block\r\n                color=\"primary\"\r\n                elevation=\"4\"\r\n                type=\"submit\"\r\n            >Cadastrar</v-btn>\r\n        </v-col>\r\n        </v-row>\r\n    </v-container>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: 'Register',\r\n\r\n    data() {\r\n        return {\r\n            username: '',\r\n            password: '',\r\n            first_name:'',\r\n            last_name:'',\r\n            birth_date: null,\r\n            activePicker: null,\r\n            menu: false,\r\n            date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n            dateFormatted: this.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\r\n        }\r\n    },\r\n    props: {\r\n        rulesUsername: {type: Array},\r\n        rulesPassword: {type: Array},\r\n        dialog: {type: Boolean}\r\n    },\r\n    watch: {\r\n      menu (val) {\r\n        val && setTimeout(() => (this.activePicker = 'YEAR'))\r\n      },\r\n      date (val) {\r\n        this.dateFormatted = this.formatDate(this.date)\r\n      },\r\n    },\r\n    computed: {\r\n      computedDateFormatted () {\r\n        return this.formatDate(this.date)\r\n      },\r\n    },\r\n    methods: {\r\n        login(){\r\n            if(!this.$refs.formRegister.validate()) return\r\n\r\n            const body = {\r\n                username: this.username,\r\n                password: this.password,\r\n                first_name: this.first_name,\r\n                last_name: this.last_name,\r\n                birth_date: this.birth_date\r\n            }\r\n\r\n            this.$root.$children[0].post(`/calendar/register`, body, '', true, 'Usuário criado com sucesso', 'success').then((res) => {\r\n                this.$emit(\"closeDialog\", false);\r\n            })\r\n\r\n            this.username= '',\r\n            this.password= '',\r\n            this.first_name='',\r\n            this.last_name='',\r\n            this.birth_date= null\r\n        },\r\n        save (date) {\r\n            this.$refs.menu.save(birth_date)\r\n        },\r\n        formatDate (date) {\r\n            if (!date) return null\r\n\r\n            const [year, month, day] = date.split('-')\r\n            return `${month}/${day}/${year}`\r\n        },\r\n        parseDate (date) {\r\n            if (!date) return null\r\n\r\n            const [month, day, year] = date.split('/')\r\n            return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\r\n        },\r\n    },\r\n\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}