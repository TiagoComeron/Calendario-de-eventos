{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from '../axios';\naxios.defaults.baseURL = 'http://localhost:8080';\nexport default {\n  // eslint-disable-next-line\n  name: 'Login',\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      rulesUsername: [function (value) {\n        return !!value || 'Required.';\n      }],\n      rulesPassword: [function (value) {\n        return !!value || 'Required.';\n      }, function (value) {\n        return value && value.length >= 8 || 'Min 8 characters';\n      }]\n    };\n  },\n  methods: {\n    loginUser: function loginUser() {\n      var _this = this;\n\n      // if(!this.$refs.form.validate()) return\n      var body = {\n        username: this.username,\n        password: this.password\n      };\n      axios.post(\"/calendar/login\", body, {\n        withCredentials: true,\n        headers: 'http://localhost:4000'\n      }) // axios.get(`/calendar/user/findAll`)\n      .then(function (response) {\n        // JSON responses are automatically parsed.\n        _this.posts = response.data;\n        console.log(response);\n        console.log(_this.posts);\n      }).catch(function (e) {\n        console.log(e);\n\n        _this.errors.push(e);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACAA;AAEA;EACA;EACAC,aAFA;EAGAC;IAAA;MACAC,YADA;MAEAC,YAFA;MAGAC,gBACA;QAAA;MAAA,CADA,CAHA;MAMAC,gBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA;IANA;EAAA,CAHA;EAcAC;IACAC,SADA,uBACA;MAAA;;MACA;MAEA;QACAL,uBADA;QAEAC;MAFA;MAKAJ;QAAAS;QAAAC;MAAA,GACA;MADA,CAEAC,IAFA,CAEA;QACA;QACA;QACAC;QACAA;MACA,CAPA,EAQAC,KARA,CAQA;QACAD;;QACA;MACA,CAXA;IAYA;EArBA;AAdA","names":["axios","name","data","username","password","rulesUsername","rulesPassword","methods","loginUser","withCredentials","headers","then","console","catch"],"sourceRoot":"src/components","sources":["Login.vue"],"sourcesContent":["<template>\r\n    <v-container class=\"justify-center\" fill-height fluid>\r\n        <v-card class=\"pa-10\" elevation=\"2\">\r\n            <v-form ref=\"form\"  lazy-validation>\r\n                <p>Calend√°rio de eventos</p>\r\n                <div>\r\n                    <v-text-field\r\n                    v-model=\"username\"\r\n                    label=\"Username\"\r\n                    :rules=\"rulesUsername\"\r\n                    hide-details=\"auto\"\r\n                    ></v-text-field>\r\n                    <v-text-field v-model=\"password\" :rules=\"rulesPassword\" label=\"Senha\"></v-text-field>\r\n                </div>\r\n                <v-btn\r\n                    block\r\n                    color=\"primary\"\r\n                    elevation=\"4\"\r\n                    v-on:click.prevent=\"loginUser\"\r\n                >Login</v-btn>\r\n            </v-form>\r\n        </v-card>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from '../axios';\r\naxios.defaults.baseURL = 'http://localhost:8080';\r\n\r\nexport default {\r\n    // eslint-disable-next-line\r\n    name: 'Login',\r\n    data: () => ({\r\n        username: '',\r\n        password: '',\r\n        rulesUsername: [\r\n            value => !!value || 'Required.',\r\n        ],\r\n        rulesPassword: [\r\n            value => !!value || 'Required.',\r\n            value => (value && value.length >= 8) || 'Min 8 characters',\r\n        ],\r\n    }),\r\n    methods: {\r\n        loginUser() {\r\n            // if(!this.$refs.form.validate()) return\r\n            \r\n            const body = {\r\n                username: this.username,\r\n                password: this.password\r\n            }\r\n\r\n            axios.post(`/calendar/login`, body, { withCredentials: true, headers: 'http://localhost:4000'})\r\n            // axios.get(`/calendar/user/findAll`)\r\n            .then(response => {\r\n                // JSON responses are automatically parsed.\r\n                this.posts = response.data\r\n                console.log(response)\r\n                console.log(this.posts)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.errors.push(e)\r\n            })\r\n        }\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}