{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from './axios';\naxios.defaults.baseURL = 'http://localhost:8080';\nexport default {\n  name: 'App',\n  data: function data() {\n    return {\n      snackbar: false,\n      text: '',\n      multiLine: true,\n      corSnackbar: ''\n    };\n  },\n  methods: {\n    exibirMensagem: function exibirMensagem(text, cor) {\n      this.text = text;\n      this.corSnackbar = cor;\n      this.snackbar = true;\n    },\n    post: function post(url, body, redirect, message, cor) {\n      var _this = this;\n\n      var res = null;\n      axios.post(url, body, {\n        headers: {\n          'Authorization': ''\n        }\n      }).then(function (response) {\n        res = response.data;\n        if (redirect) _this.$router.push('/' + redirect);\n        if (message) _this.exibirMensagem(res.message, cor);\n        console.log(response);\n      }).catch(function (e) {\n        res = e;\n\n        if (e.response.status == 403) {\n          _this.exibirMensagem(_this.posts.message, 'error');\n\n          _this.$router.push('/');\n        }\n      });\n      return res;\n    },\n    get: function get(url, redirect, message, cor) {\n      var _this2 = this;\n\n      var res = null;\n      axios.get(url, {\n        headers: {\n          'Authorization': ''\n        }\n      }).then(function (response) {\n        // JSON responses are automatically parsed.\n        res = response;\n        if (redirect) _this2.$router.push('/' + redirect);\n        if (message) _this2.exibirMensagem(res.data.message, cor);\n      }).catch(function (e) {\n        res = e;\n\n        if (e.response.status == 403) {\n          _this2.exibirMensagem(e.response.data.message, 'error');\n\n          if (_this2.$router.currentRoute.path != '/login') _this2.$router.push('/login');\n        }\n      });\n      console.log(\"final\");\n      return res;\n    }\n  },\n  computed: {\n    '$router.currentRoute.path': function $routerCurrentRoutePath() {\n      console.log(\"this\");\n    }\n  },\n  created: function created() {\n    var res = this.get('calendar/user/profile', false);\n    console.log(res); // if(res.headers.Authorization)\n    //   this.$cookies.set('authorization', res.headers.authorization)\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACAA;AAEA;EACAC,WADA;EAIAC;IAAA;MACAC,eADA;MAEAC,QAFA;MAGAC,eAHA;MAIAC;IAJA;EAAA,CAJA;EAUAC;IACAC,cADA,0BACAJ,IADA,EACAK,GADA,EACA;MACA;MACA;MACA;IACA,CALA;IAMAC,IANA,gBAMAC,GANA,EAMAC,IANA,EAMAC,QANA,EAMAC,OANA,EAMAL,GANA,EAMA;MAAA;;MACA;MACAT;QAAAe;UAAA;QAAA;MAAA,GACAC,IADA,CACA;QACAC;QACA,cACA;QACA,aACA;QACAC;MACA,CARA,EASAC,KATA,CASA;QACAF;;QACA;UACA;;UACA;QACA;MACA,CAfA;MAiBA;IACA,CA1BA;IA2BAG,GA3BA,eA2BAT,GA3BA,EA2BAE,QA3BA,EA2BAC,OA3BA,EA2BAL,GA3BA,EA2BA;MAAA;;MACA;MACAT;QAAAe;UAAA;QAAA;MAAA,GACAC,IADA,CACA;QACA;QACAC;QACA,cACA;QACA,aACA;MAEA,CATA,EAUAE,KAVA,CAUA;QACAF;;QACA;UACA;;UACA,kDACA;QACA;MACA,CAjBA;MAkBAC;MACA;IACA;EAjDA,CAVA;EA6DAG;IACA,2BADA,qCACA;MACAH;IACA;EAHA,CA7DA;EAkEAI,OAlEA,qBAkEA;IACA;IACAJ,iBAFA,CAGA;IACA;EACA;AAvEA","names":["axios","name","data","snackbar","text","multiLine","corSnackbar","methods","exibirMensagem","cor","post","url","body","redirect","message","headers","then","res","console","catch","get","computed","created"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <!-- <v-app-bar\n      app\n      color=\"primary\"\n      dark\n    > -->\n      <!-- <div class=\"d-flex align-center\">\n        <v-img\n          alt=\"Vuetify Logo\"\n          class=\"shrink mr-2\"\n          contain\n          src=\"https://cdn.vuetifyjs.com/images/logos/vuetify-logo-dark.png\"\n          transition=\"scale-transition\"\n          width=\"40\"\n        />\n\n        <v-img\n          alt=\"Vuetify Name\"\n          class=\"shrink mt-1 hidden-sm-and-down\"\n          contain\n          min-width=\"100\"\n          src=\"https://cdn.vuetifyjs.com/images/logos/vuetify-name-dark.png\"\n          width=\"100\"\n        />\n      </div>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        href=\"https://github.com/vuetifyjs/vuetify/releases/latest\"\n        target=\"_blank\"\n        text\n      >\n        <span class=\"mr-2\">Latest Release</span>\n        <v-icon>mdi-open-in-new</v-icon>\n      </v-btn> -->\n    <!-- </v-app-bar> -->\n\n    <!-- <v-main>\n      <Login />\n    </v-main> -->\n    <v-snackbar\n      v-model=\"snackbar\"\n      :multi-line=\"multiLine\"\n      top\n      :color=\"corSnackbar\"\n      timeout='3000'\n      class=\"mt-8\"\n    >\n      <div class=\"pa-2\">{{ text }}</div>\n    </v-snackbar>\n    <router-view/>\n  </v-app>\n</template>\n\n<script>\n\nimport axios from './axios';\naxios.defaults.baseURL = 'http://localhost:8080';\n\nexport default {\n  name: 'App',\n\n\n  data: () => ({\n    snackbar: false,\n    text: '',\n    multiLine:true,\n    corSnackbar: '',\n  }),\n  methods: {\n    exibirMensagem(text, cor) {\n      this.text = text;\n      this.corSnackbar = cor;\n      this.snackbar = true;\n    },\n    post(url, body, redirect, message, cor){\n      let res = null\n      axios.post(url, body, {headers: {'Authorization': ''}})\n      .then(response => {\n          res = response.data\n          if(redirect)\n            this.$router.push('/'+redirect)\n          if(message)\n            this.exibirMensagem(res.message, cor)\n          console.log(response);\n      })\n      .catch(e => {\n          res = e\n          if(e.response.status == 403){\n              this.exibirMensagem(this.posts.message, 'error')\n              this.$router.push('/')\n          }\n      })\n\n      return res\n    },\n    get(url, redirect, message, cor){\n      let res = null\n      axios.get(url, {headers: {'Authorization': ''}})\n      .then(response => {\n          // JSON responses are automatically parsed.\n          res = response\n          if(redirect)\n            this.$router.push('/'+redirect)\n          if(message)\n            this.exibirMensagem(res.data.message, cor)\n\n      })\n      .catch(e => {\n          res = e\n          if(e.response.status == 403){\n              this.exibirMensagem(e.response.data.message, 'error')\n              if(this.$router.currentRoute.path != '/login')\n              this.$router.push('/login')\n          }\n      })\n      console.log(\"final\");\n      return res\n    }\n  },\n  computed:{\n    '$router.currentRoute.path'(){\n      console.log(\"this\")\n    }\n  },\n  created() {\n    const res = this.get('calendar/user/profile', false)\n    console.log(res)\n    // if(res.headers.Authorization)\n    //   this.$cookies.set('authorization', res.headers.authorization)\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}